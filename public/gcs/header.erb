<% page_data = defined?(page_data) && !page_data.nil? ? page_data : {} %>

<style>
  .header {
    padding-left: calc(var(--padding) /2);
    padding-right: calc(var(--padding) /2);
    margin-top: calc(var(--padding) /2);
    margin-bottom: calc(var(--padding) /2);
  }

  .search-bar {
    display: flex;
  }

  .breadcrumb-container {
    display: flex;
    gap: calc(var(--padding) /2);
    margin-right: calc(var(--padding) /2);
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    padding: 10px 20px;
    border: none;
    background-color: white;
    color: black;
    border-radius: 15px;
    font-size: 1rem;
    box-shadow: 0 4px 6px 0 hsla(0, 0%, 0%, 0.2);
  }

  .search-bar input {
    flex: 1;
    border: none;
    padding: 10px;
    outline: none;
    border-radius: 15px;
    font-size: 1rem;
    box-shadow: 0 4px 6px 0 hsla(0, 0%, 0%, 0.2);
  }

  .breadcrumb img,
  .breadcrumb-thumbnail {
    width: 25px;
    height: 25px;
    border-radius: 50%;
  }

  .breadcrumb-thumbnail-with-title {
    margin-right: 5px;
  }

  .breadcrumb-icon {
    font-size: 1.5em;
    line-height: 1;
    display: inline-block;
    vertical-align: middle; /* Align the icon with the text */
  }

  .breadcrumb-icon-with-title {
    margin-right: 7px;
  }

  .breadcrumb a,
  .clickable {
    color: inherit;
    text-decoration: none;
  }

  .breadcrumb-content {
    display: inline-flex;
    align-items: center;
    justify-content: center; /* Add this to center the items vertically */
  }

  a:hover .breadcrumb {
    background-color: #f5f5f5; /* Light grey background */
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); /* Slightly elevated look */
    transition: all 0.3s cubic-bezier(.25,.8,.25,1); /* Smooth transition */
  }

  #activityIndicator {
    display: none;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: var(--zindex-activity-indicator);
  }
  
  .spinner {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #000000;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 2s linear infinite;
  }
</style>

<%
  def build_breadcrumbs(route, page_data)
    route_components = route == "/" ? [""] : ["/"] + route.split("/")[1..-1]

    breadcrumbs = route_components.each_with_index.map do |component, index|
      breadcrumb_route = route_components[0..index].join
      breadcrumb_route = "/" if breadcrumb_route.empty?

      breadcrumb_page_data = component == page_data[:route] ? page_data : fetch_document_data("pages", { :field => "route", :value => breadcrumb_route })

      next if breadcrumb_page_data.nil?

      {
        :title => breadcrumb_page_data[:title],
        :icon => breadcrumb_page_data[:icon],
        :img_src => breadcrumb_page_data[:img_src],
        :route => breadcrumb_route
      }
    end.compact

    breadcrumbs
  end
%>

<div class="header">
  <div class="search-bar">
    <% breadcrumbs = build_breadcrumbs(request.path_info, page_data) %>
    <% unless breadcrumbs.empty? %>
      <div class="breadcrumb-container">
        <% breadcrumbs.each do |breadcrumb| %>
          <% img_src = breadcrumb.fetch(:img_src, nil) %>
          <% icon = breadcrumb.fetch(:icon, nil) %>
          <% title = breadcrumb.fetch(:title, nil) %>
          <a href="<%= breadcrumb.fetch(:route, '/') %>" class="clickable">
            <span class="breadcrumb breadcrumb-content">
              <% if img_src && !img_src.empty? %>
                <img src="<%= img_src %>" alt="Thumbnail" class="breadcrumb-thumbnail <%= title && !title.empty? ? 'breadcrumb-thumbnail-with-title' : '' %>">
              <% elsif icon && !icon.empty? %>
                <i class="<%= icon %> breadcrumb-icon <%= title && !title.empty? ? 'breadcrumb-icon-with-title' : '' %>"></i>
              <% else %>
                <img src="https://via.placeholder.com/150" alt="" class="breadcrumb-thumbnail <%= title && !title.empty? ? 'breadcrumb-thumbnail-with-title' : '' %>">
              <% end %>
              <% if title && !title.empty? %>
                <%= title %>
              <% end %>
            </span>
          </a>
        <% end %>
      </div>
    <% end %>
    <input type="search" name="search" placeholder="Search...">
  </div>
  <div id="activityIndicator">
    <div class="spinner"></div>
  </div>
</div>

<script src="/pub_sub.js"></script>
<script src="/search_functions.js"></script>
<script>
  function initializeHeader() {
    var searchInput = document.querySelector("input[name='search']");
    var activityIndicator = document.getElementById('activityIndicator');
    var indexName = '<%= page_data.fetch(:collection, nil) %>';

    // Set up the search input event listener
    searchInput.addEventListener("keyup", function(event) {
      var searchTerm = event.target.value.trim();
      var url = "/search/" + indexName + (searchTerm ? "?term=" + encodeURIComponent(searchTerm) : "");

      if (indexName && indexName.trim() !== '') {
        performSearch("/search/" + indexName, "");
      } else {
        console.error("indexName is not set correctly in the JavaScript code.");
      }
    });

    // Initial fetch of search results on page load
    performSearch("/search/" + indexName, "");
  }

  // Initialize the sidebar after the DOM is fully loaded
  window.firebaseInitialized
    .then(initializeHeader)
    .catch(function(error) {
      console.error('Error during Firebase initialization:', error);
    });
</script>
