---
- __props__:
    index_name: String
- header
- results:
    yield: true
---
<style>
  .content {
    display: flex;
    flex-direction: column;
    position: relative;
    width: 100%;
    padding-left: var(--padding);
    padding-right: var(--padding);
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  #activityIndicator {
    display: none;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
  }
  
  .spinner {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #000000;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 2s linear infinite;
  }
</style>

<div class="content">
  <%= header %>
  <div id="activityIndicator">
    <div class="spinner"></div>
  </div>
  <%= results %>
</div>

<script>
  function createNoResultsElement(searchTerm) {
    var noResultsElement = document.createElement('div');
    noResultsElement.classList.add('result');

    var noResultsMessage = createElementWithText('h2', 'Sorry, we couldn\'t find results for "' + searchTerm + '".');

    var suggestionsList = document.createElement('ul');
    var suggestions = [
      'Check your search for typos.',
      'Use more generic search terms.',
      'Try different search terms.',
      'Try fewer search terms.',
      'Need help finding something? Contact us.'
    ];
    suggestions.forEach(function(suggestion) {
      var listItem = createElementWithText('li', suggestion);
      suggestionsList.appendChild(listItem);
    });

    appendChildren(noResultsElement, [noResultsMessage, suggestionsList]);
    return noResultsElement;
  }

  function createElementWithText(type, text) {
    var element = document.createElement(type);
    element.innerText = text;
    return element;
  }

  function appendChildren(parent, children) {
    children.forEach(function(child) {
      parent.appendChild(child);
    });
  }

  function renderDataOrNoResults(data, container, searchTerm, renderDataFunction, createNoResultsElement) {
    if (data.length > 0) {
      appendChildren(container, data.map(renderDataFunction));
    } else {
      container.appendChild(createNoResultsElement(searchTerm));
    }
  }

  document.addEventListener("DOMContentLoaded", function() {
    var resultsContainer = document.getElementById('results');
    var activityIndicator = document.getElementById('activityIndicator');

    var url = "/search/" + index_name;

    activityIndicator.style.display = 'flex';

    fetch(url)
      .then(function(response) {
        return response.json();
      })
      .then(function(data) {
        activityIndicator.style.display = 'none';

        /* Clear previous results */
        while (resultsContainer.firstChild) {
          resultsContainer.removeChild(resultsContainer.firstChild);
        }
        renderResults(data, resultsContainer, "");
      });

    document.querySelector("input[name='search']").addEventListener("keyup", function(event) {
      var searchTerm = event.target.value;

      resultsContainer.innerHTML = '';
      var activityIndicator = document.getElementById('activityIndicator');

      /* If the search term is empty, clear the results and return early */
      if (searchTerm.trim() === '') {
        activityIndicator.style.display = 'none';
        return;
      }

      var url = "/search/" + index_name + "?term=" + searchTerm;

      activityIndicator.style.display = 'flex';

      fetch(url)
        .then(function(response) {
          return response.json();
        })
        .then(function(data) {
          activityIndicator.style.display = 'none';
          
          /* Clear previous results */
          while (resultsContainer.firstChild) {
            resultsContainer.removeChild(resultsContainer.firstChild);
          }
          renderResults(data, resultsContainer, searchTerm);
        });
    });
  });
</script>
