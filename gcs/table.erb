---
- __props__:
    columns: Array
    enable_move: Boolean
    create_title: String
- recurrence
---
<style>
  .grid-table {
    display: grid;
    gap: 1px;
    background-color: black;
    margin: 30px 0px;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
  }

  .grid-row {
    display: grid;
    grid-template-columns: <%= "repeat(#{columns.count}, 1fr) repeat(3, 0.5fr);" %>;
    width: 100%;
  }

  .grid-row .content-cell {
    background-color: #fff;
    padding: 10px;
    text-align: center;
    transition: all 0.3s;
    min-width: 100px; /* adjust based on your needs */
    min-height: 50px; /* adjust based on your needs */
  }

  .grid-row .content-cell:hover {
    background-color: #ddd;
    cursor: pointer;
  }

  .grid-row .header {
    text-align: center;
    padding: 10px; /* adjust based on your needs */
    background-color: black;
    color: #fff;
    font-size: 18px;
    cursor: default;
  }

  .grid-row .icon-column {
    background-color: #fff;
    padding: 10px;
    text-align: left;
    transition: all 0.3s;
    min-width: 50px; /* adjust based on your needs */
    min-height: 50px; /* adjust based on your needs */
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .grid-row .icon-column:hover {
    background-color: #ddd;
    cursor: pointer;
  }

  .grid-table i {
    color: black;
    font-size: 1.2em;
    margin: 0 10px;
  }

  .grid-table button {
    border: none;
    padding: 0;
    background: none;
  }

  #button-table-container {
    display: flex;
    flex-direction: column;
  }

  .table-button {
    align-self: flex-end;
  }

  .grid-row > div {
    border-right: 1px solid #ccc;
  }

  .grid-row > div:last-child {
    border-right: none;
  }
</style>

<div id="button-table-container">
  <input type="hidden" id="enableMove" value="<%= enable_move %>">
  <div class="grid-table rounded-shadow" id="results">
    <div class="grid-row">
      <% columns.each do |x| %>
        <div class="header"><%= x&.fetch(:name, nil) %></div>
      <% end %>
      <div class="header icon-header"></div>
      <div class="header icon-header"></div>
      <div class="header icon-header"></div>
    </div>

    <div id="template-row" class="grid-row sortable-row">
      <div class="content-cell"></div>

      <div class="icon-column">
        <a class="edit-link">
          <i class="fas fa-edit"></i>
        </a>
      </div>

      <div class="icon-column">
        <form class="delete-form" method="post">
          <button type="submit">
            <i class="fas fa-trash"></i>
          </button>
        </form>
      </div>

      <div class="icon-column drag-handle">
        <i class="fas fa-bars"></i>
      </div>

    </div>

  </div>
</div>

<script>
  function createRowWithData(data) {
    var templateRow = document.getElementById('template-row');
    var row = templateRow.cloneNode(true);
    row.style.display = "";
    row.dataset.resource = data.resource;
    row.dataset.id = data.id;

    var cell = row.querySelector('.content-cell');
    
    for (var key in data) {
      cell.dataset[key] = data[key];
      cell.dataset.rowId = data.id;
      cell.textContent = data[key];
    }

    var editLink = row.querySelector('.edit-link');
    editLink.dataset.id = data.id;
    editLink.dataset.rowId = data.id;

    var deleteForm = row.querySelector('.delete-form');
    deleteForm.action = "/delete/" + data.resource;

    return row;
  }

  function renderResults(data, container, searchTerm) {
    renderDataOrNoResults(data, container, searchTerm, createRowWithData, createNoResultsElement);
  }
</script>
