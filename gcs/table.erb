---
- __props__:
    columns: Array
    enable_move: Boolean
    create_title: String
- recurrence
---
<style>
  .grid-table {
    display: grid;
    gap: 1px;
    background-color: black;
    margin: 30px 0px;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
  }

  .grid-row {
    display: grid;
    grid-template-columns: <%= "repeat(#{Array(columns).count}, 1fr) repeat(3, 0.5fr);" %>;
    width: 100%;
  }

  .grid-row .content-cell {
    background-color: #fff;
    padding: 10px;
    text-align: center;
    transition: all 0.3s;
    min-width: 100px; /* adjust based on your needs */
    min-height: 50px; /* adjust based on your needs */
  }

  .grid-row .content-cell:hover {
    background-color: #ddd;
    cursor: pointer;
  }

  .grid-row .header {
    text-align: center;
    padding: 10px; /* adjust based on your needs */
    background-color: black;
    color: #fff;
    font-size: 18px;
    cursor: default;
  }

  .grid-row .icon-column {
    background-color: #fff;
    padding: 10px;
    text-align: left;
    transition: all 0.3s;
    min-width: 50px; /* adjust based on your needs */
    min-height: 50px; /* adjust based on your needs */
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .grid-row .icon-column:hover {
    background-color: #ddd;
    cursor: pointer;
  }

  .grid-table i {
    color: black;
    font-size: 1.2em;
    margin: 0 10px;
  }

  .grid-table button {
    border: none;
    padding: 0;
    background: none;
  }

  .button-table-container {
    display: flex;
    flex-direction: column;
  }

  .table-button {
    align-self: flex-end;
  }

  .grid-row > div {
    border-right: 1px solid #ccc;
  }

  .grid-row > div:last-child {
    border-right: none;
  }
</style>

<div class="button-table-container">
  <input type="hidden" id="enableMove" value="<%= enable_move %>">
  <button id="create-btn" class="button table-button rounded-shadow font"><i class="fas fa-plus-circle"></i> <%= create_title %></button>

  <div class="grid-table rounded-shadow" id="results">
    <!-- Rows will be inserted here by JS -->
  </div>
</div>

<script>
  function createRowWithData(data) {
    var row = document.createElement('div');
    row.className = "grid-row sortable-row";
    row.dataset.resource = data.resource;
    row.dataset.id = data.id;
    
    for (var key in data) {
      var cell = document.createElement('div');
      cell.className = "content-cell";
      cell.dataset[key] = data[key];
      cell.dataset.rowId = data.id;
      cell.textContent = data[key];
      row.appendChild(cell);
    }

    /* Add the three icon columns */
    var editColumn = document.createElement('div');
    editColumn.className = "icon-column";
    var editLink = document.createElement('a');
    editLink.className = "edit-link";
    editLink.dataset.id = data.id;
    editLink.dataset.rowId = data.id;

    /* Add the edit icon to the edit link */
    var editIcon = document.createElement('i');
    editIcon.className = "fas fa-edit";
    editLink.appendChild(editIcon);
    editColumn.appendChild(editLink);
    row.appendChild(editColumn);

    /* Add the delete column */
    var deleteColumn = document.createElement('div');
    deleteColumn.className = "icon-column";
    var deleteForm = document.createElement('form');
    deleteForm.action = "/delete/" + data.resource;
    deleteForm.method = "post";

    /* Add the delete icon to the delete form */
    var deleteIcon = document.createElement('i');
    deleteIcon.className = "fas fa-trash";
    var deleteButton = document.createElement('button');
    deleteButton.type = "submit";
    deleteButton.appendChild(deleteIcon);
    deleteForm.appendChild(deleteButton);
    deleteColumn.appendChild(deleteForm);
    row.appendChild(deleteColumn);

    /* Add the drag column */
    var dragColumn = document.createElement('div');
    dragColumn.className = "icon-column drag-handle";

    /* Add the drag icon to the drag column */
    var dragIcon = document.createElement('i');
    dragIcon.className = "fas fa-bars";
    dragColumn.appendChild(dragIcon);
    row.appendChild(dragColumn);

    return row;
  }

  function renderResults(data, container, searchTerm) {
    renderDataOrNoResults(data, container, searchTerm, createRowWithData, createNoResultsElement);
  }
</script>
